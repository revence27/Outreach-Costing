.regions
  .region
    - @districts.each do |dist|
      .district
        .districtname
          = dist.name
          District &nbsp; &nbsp; &nbsp;
          = surround '(', ')' do
            = number_to_human dist.district_data.population
        %table
          %thead
            %th{:colspan => 2}
              Demographics
          %tbody
            %tr
              %td{:class => 'heading'}
                Total population
              %td{:class => 'data'}
                = number_with_delimiter dist.district_data.population
            %tr
              %td{:class => 'heading'}
                Total under one year
              %td{:class => 'data'}
                = number_with_delimiter dist.district_data.under_one
            %tr
              %td{:class => 'heading'}
                Total population 1-4 years
              %td{:class => 'data'}
                = number_with_delimiter dist.district_data.one_to_four
            %tr
              %td{:class => 'heading'}
                Estimated annual pregnancies
              %td{:class => 'data'}
                = number_with_delimiter dist.district_data.pregnancies
            %tr
              %td{:class => 'heading'}
                Expected HIV+ pregnancies
              %td{:class => 'data'}
                - val = Assumption.exec :hiv_preg, dist
                = number_with_delimiter val.ceil
            %tr
              %td{:class => 'heading'}
                Expected HIV+ children
              %td{:class => 'data'}
                - val = Assumption.exec :hiv_preg, dist
                = number_with_delimiter val.ceil
        %table
          - @partitions.each do |partition|
            %thead
              %th{:colspan => 2}
                = partition.first
            %tbody
              - mass_total = 0.0
              - @components.each do |component|
                %tr
                  %td{:colspan => 2, :class => 'smallhead'}
                    = component.name
                - component.chosen_activities(@data).each do |activity|
                  - my_items = activity.chosen_items(@data)
                  - my_items.each do |item|
                    %tr
                      %td{:class => 'heading'}
                        = item.description
                      %td{:class => 'data'}
                        = precede([:esti].member?(partition.last) ? '$' : '') do
                          = number_with_delimiter item.assumption(component.name, partition.last).calculate(dist).ceil
                  - if partition.last == :esti then
                    - my_items.select {|it| it.associated_items.count > 0}.each do |item|
                      - raise Exception.new('Yay! We have associated items!')
                      - item.associated_items.each do |asit|
                        %tr
                          %td{:class => 'heading'}
                            = asit.description
                          %td{:class => 'data'}
                            $
                            = number_with_delimiter asit.assumption(component.name, partition.last).calculate(dist).ceil
                    - val = Assumption.exec :annual_total, dist, my_items
                    - mass_total = mass_total + val
              - if partition.last == :esti
                %tr{:class => 'sumrow'}
                  %td{:class => 'heading'}
                    Total
                  %td{:class => 'data'}
                    = precede '$' do
                      = number_with_delimiter mass_total.round(2)
                %tr
                  %td{:class => 'heading'}
                    Cost for 10% Wastage
                  %td{:class => 'data'}
                    = precede '$' do
                      - val = Assumption.exec :wastage, dist, mass_total
                      = number_with_delimiter val.round(2)
